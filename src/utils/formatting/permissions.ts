import { PermissionsBitField } from 'discord.js';

export const permissionsMap: { [key: string]: string } = {
	CreateInstantInvite: 'Create Instant Invite',
	KickMembers: 'Kick Members',
	BanMembers: 'Ban Members',
	Administrator: 'Administrator',
	ManageChannels: 'Manage Channels',
	ManageGuild: 'Manage Guild',
	AddReactions: 'Add Reactions',
	ViewAuditLog: 'View Audit Log',
	PrioritySpeaker: 'Priority Speaker',
	Stream: 'Stream',
	ViewChannel: 'View Channel',
	SendMessages: 'Send Messages',
	SendTTSMessages: 'Send TTS Messages',
	ManageMessages: 'Manage Messages',
	EmbedLinks: 'Embed Links',
	AttachFiles: 'Attach Files',
	ReadMessageHistory: 'Read Message History',
	MentionEveryone: 'Mention Everyone',
	UseExternalEmojis: 'Use External Emojis',
	ViewGuildInsights: 'View Guild Insights',
	Connect: 'Connect',
	Speak: 'Speak',
	MuteMembers: 'Mute Members',
	DeafenMembers: 'Deafen Members',
	MoveMembers: 'Move Members',
	UseVAD: 'Use Voice Activity Detection',
	ChangeNickname: 'Change Nickname',
	ManageNicknames: 'Manage Nicknames',
	ManageRoles: 'Manage Roles',
	ManageWebhooks: 'Manage Webhooks',
	ManageGuildExpressions: 'Manage Guild Expressions',
	UseApplicationCommands: 'Use Application Commands',
	RequestToSpeak: 'Request To Speak',
	ManageEvents: 'Manage Events',
	ManageThreads: 'Manage Threads',
	CreatePublicThreads: 'Create Public Threads',
	CreatePrivateThreads: 'Create Private Threads',
	UseExternalStickers: 'Use External Stickers',
	SendMessagesInThreads: 'Send Messages In Threads',
	UseEmbeddedActivities: 'Use Embedded Activities',
	ModerateMembers: 'Moderate Members',
	ViewCreatorMonetizationAnalytics: 'View Subscription Insights',
	UseSoundboard: 'Use Soundboard',
	CreateGuildExpressions: 'Create Guild Expressions',
	CreateEvents: 'Create Events',
	UseExternalSounds: 'Use External Sounds',
	SendVoiceMessages: 'Send Voice Messages',
	SendPolls: 'Send Polls',
	UseExternalApps: 'Use External Apps',
	PinMessages: 'Pin Messages',
};

export function getPermissionName(permBigInt: bigint): string {
	const tempBitField = new PermissionsBitField(permBigInt);
	const permissionArray = tempBitField.toArray();
	return permissionArray[0] ?? 'Unknown';
}
